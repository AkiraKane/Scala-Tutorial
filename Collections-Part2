Scala Sets:
It is a collection of pairwise different elements of same type. The key distinct feature of set is that it doesn't contain duplicte elements.
There are two kinds of sets- immutable and mutable.
By default, scala sets are immutable. If we want to use mutable set, import scala.collection.mutable.Set class.
immutable set refers to as Set and we can refer the mutable set as mutable.Set

Declare Immutable set:
var s:Set[Int]=Set() //Empty set of integer type
var s:Set[Int]=Set(1,3,5,7)
var s=Set(1,3,5,7)

Basic Operations on Set:
head -> returns first element of the set
tail -> returns a set containing all the elements except the first
isEmpty -> returns tru if the set is empty otherwise false

Example:
val fruit = Set("apples", "oranges", "pears")

println( "Head of fruit : " + fruit.head )
println( "Tail of fruit : " + fruit.tail )
println( "Check if fruit is empty : " + fruit.isEmpty )
println( "Check if nums is empty : " + nums.isEmpty )

Result:
Head of fruit : apples
Tail of fruit : Set(oranges, pears)
Check if fruit is empty : false
Check if nums is empty : true
 
Concatenating Sets:
++ or Set.++() method is used to concatenate two or more sets. One point to be noted here is while concatenating the sets, duplicate elements 
are removed.
Example:
val fruit1 = Set("apples", "oranges", "pears")
val fruit2 = Set("mangoes", "banana")

// use two or more sets with ++ as operator
var fruit = fruit1 ++ fruit2
println( "fruit1 ++ fruit2 : " + fruit )

// use two sets with ++ as method
fruit = fruit1.++(fruit2)
println( "fruit1.++(fruit2) : " + fruit )

Other methods like Set.max and Set.min are used to find out the maximum and minimum elements in the set.
Example:
val num = Set(5,6,9,20,30,45)

// find min and max of the elements
println( "Min element in Set(5,6,9,20,30,45) : " + num.min ) // returns 5
println( "Max element in Set(5,6,9,20,30,45) : " + num.max ) // returns 45

Find common values in Sets:
Use Set.& or Set.intersect are used to find out the common values between twos sets.
Example:
 val num1 = Set(5,6,9,20,30,45)
      val num2 = Set(50,60,9,20,35,55)

// find common elements between two sets
println( "num1.&(num2) : " + num1.&(num2) )
println( "num1.intersect(num2) : " + num1.intersect(num2) )

Scala Set Methods:



